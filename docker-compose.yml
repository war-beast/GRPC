version: '3.8'
  
services:

    service-db:
        container_name: postgres-server
        image: postgres:14.7-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: mypass
        ports:
          - "5432:5432"
        volumes:
          - ./infrastructure/db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
          - db-data:/var/lib/postgresql/data
        restart: unless-stopped

    pgadmin:
        container_name: pgadmin4
        image: dpage/pgadmin4:7
        restart: always
        environment:
          PGADMIN_DEFAULT_EMAIL: 1@1.com
          PGADMIN_DEFAULT_PASSWORD: mypass
        ports:
          - "5050:80"
        depends_on:
          - service-db
        volumes:
            - pgadmin-data:/var/lib/pgadmin

    ###### MongoDB

    mongodb:
        image: mongodb
        container_name: mongodb
        build: 
            context: ./db
            dockerfile: Dockerfile
        hostname: mongodb
        ports:
            - 27017:27017
        command: --bind_ip_all --quiet
        logging:
            driver: none
      
    web:
        image: api
        container_name: api
        build: 
          context: .
          dockerfile: Grpc/dev.Dockerfile
        volumes:
          - /app/Grpc/bin
          - /app/Grpc/obj
          - /app/DAL/bin
          - /app/DAL/obj
          - /app/Shared/bin
          - /app/Shared/obj
          - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
          - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
        ports:
          - "7194:443"
          - "5117:80"
        depends_on:
          - service-db
        environment:
          - ASPNETCORE_URLS=https://+:443;http://+:80
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_HTTPS_PORT=7194
      
    simple-greeter:
        image: greeter-service
        container_name: greeter-service
        build: 
          context: .
          dockerfile: SimpleGrpcService/dev.Dockerfile
        volumes:
          - /app/SimpleGrpcService/bin
          - /app/SimpleGrpcService/obj
          - /app/Shared/bin
          - /app/Shared/obj
          - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
          - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
        ports:
          - "7037:443"
          - "5112:80"
        depends_on:
          - service-db
        environment:
          - ASPNETCORE_URLS=https://+:443;http://+:80
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_HTTPS_PORT=7037
      
    intermediate-2:
        image: inter-service
        container_name: inter-service
        build: 
          context: .
          dockerfile: IntermediateService/dev.Dockerfile
        volumes:
          - /app/IntermediateService/bin
          - /app/IntermediateService/obj
          - /app/Shared/bin
          - /app/Shared/obj
          - /app/Intermediate.DAL/bin
          - /app/Intermediate.DAL/obj
          - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
          - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
        ports:
          - "7124:443"
          - "5137:80"
        depends_on:
          - mongodb
        environment:
          - ASPNETCORE_URLS=https://+:443;http://+:80
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_HTTPS_PORT=7124

volumes:
  db-data:
  pgadmin-data:
        